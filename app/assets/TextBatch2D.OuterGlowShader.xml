<?xml version="1.0" encoding="utf-8"?>
<shader name="TextBatchDefaultShader">

  <properties>
    <transparent enabled="false" />
    <blend enabled="true" template_file="Blend.DefaultAlpha.xml"/>
    <cull enabled="false" />
    <depth enabled="false" />
  </properties>
  
  <aliases>
    <alias uniform="mvp0" type="mat4" ref="ModelViewProjectionMatrix" />
	<alias uniform="itl" type="float" ref="Callback" />
	<alias uniform="ogclr" type="vec4" ref="Callback" />
	<alias uniform="ogdat" type="vec2" ref="Callback" />
  </aliases>
  
  <vertex>
    <![CDATA[
    #version 330 core
    layout (location = 0) in vec4 pos0uv0;
    
    out vec2 uv0_out;
    in int gl_VertexID;
	
    uniform mat4 mvp0;
	uniform float itl; //italic = font_max_width * italic_power
	
    void main()
    {
		gl_Position = mvp0 * vec4(pos0uv0.xy+vec2(itl*(1.0-step(2.0,mod(gl_VertexID, 4))),0.0), 0.0, 1.0);
		uv0_out = pos0uv0.zw;
    }
    ]]>
  </vertex>
  
  <fragment>
    <![CDATA[
    #version 330 core
    out vec4 FragColor;
    
    in vec2 uv0_out;
    uniform sampler2D tex0;
	
	uniform vec4 ogclr; //outer_glow_color
	uniform vec2 ogdat; //_brush_outer_glow_min_range and _brush_outer_glow_max_range
	
    void main()
    {
		FragColor = texture(tex0, uv0_out);

		FragColor.rgb = ogclr.rgb;
		FragColor.a = smoothstep(ogdat.x,ogdat.y,FragColor.a)*ogclr.a;
    }
    ]]>
  </fragment>
  
  <geometry>
    <![CDATA[]]>
  </geometry>
</shader>